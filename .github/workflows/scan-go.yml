name: Code Scanning

on:
  workflow_call:
    inputs:
      sonar-configuration:
        required: true
        description: "Path to the configuration file"
        type: string
      coverage-command:
        description: 'The command to use to run the tests (defaults to go test -v -race -covermode=atomic -coverpkg=./...)'
        required: false
        type: string
        default: go test -v -race -covermode=atomic -coverpkg=./...
      coverage-output-file:
        description: 'The output file name to store the coverage results in (defaults to coverage.out)'
        required: false
        type: string
        default: coverage.out
    secrets:
      github:
        required: true
      sonar:
        required: true
      codecov:
        required: true
      semgrep:
        required: true

permissions: {}

jobs:
  Semgrep:
    runs-on: ubuntu-22.04
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.semgrep }}
    container:
      image: semgrep/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - name: Checkout repo
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29
      - run: semgrep ci

  CodeScan:
    name: Code scan and coverage analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@8459bc0c7e3759cdf591f513d9f141a95fef0a8f
        with:
          fetch-depth: 0

      - name: Run Coverage
        uses: ./.github/workflows/coverage-go.yml
        with:
          command: ${{ inputs.coverage-command }}
          output-file: ${{ inputs.coverage-output-file }}

      - name: Codecov
        uses: bytemare/actions/codecov@b7e5199ae151599349287076bcccf7014ae98d99
        env:
          CODECOV_TOKEN: ${{ secrets.codecov }}
        with:
          coverage-report: ${{ needs.Cover.outputs.coverage-output-file }}

      - name: SonarCloud
        uses: bytemare/actions/sonar-scan@8b964e6bc8fa68d84be77b0d601957e4b1c56aac
        env:
          GITHUB_TOKEN: ${{ secrets.github }}
          SONAR_TOKEN: ${{ secrets.sonar }}
        with:
          configuration: ${{ inputs.sonar-configuration }}
          coverage: /home/runner/work/workflows/workflows/${{ needs.Cover.outputs.coverage-output-file }}