name: Code Scanning

on:
  workflow_call:
    inputs:
      sonar-configuration:
        required: true
        description: "Path to the configuration file"
        type: string
      coverage-command:
        description: 'The command to use to run the tests (defaults to go test -v -race -covermode=atomic -coverpkg=./...)'
        required: false
        type: string
        default: go test -v -race -covermode=atomic -coverpkg=./...
      coverage-output-file:
        description: 'The output file name to store the coverage results in (defaults to coverage.out)'
        required: true
        type: string
        default: coverage.out
      coverage-scope:
        description: 'The location to run the command on (defaults to ./...)'
        required: false
        type: string
        default: ./...
    secrets:
      github:
        required: true
      sonar:
        required: true
      codecov:
        required: true
      semgrep:
        required: true

permissions: {}

jobs:
  GoVulnCheck:
    permissions:
      contents: read
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
    uses: ./.github/workflows/govulncheck.yaml

  Dependency-Review:
    permissions:
      contents: read
    uses: ./.github/workflows/dependency-review.yml

  Semgrep:
    permissions:
      contents: read
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
    uses: ./.github/workflows/semgrep.yml
    secrets:
      semgrep: ${{ secrets.semgrep }}

  Codecov:
    uses: ./.github/workflows/codecov.yml
    secrets:
      codecov: ${{ secrets.codecov }}
    with:
      coverage-command: ${{ inputs.coverage-command }}
      coverage-output-file: ${{ inputs.coverage-output-file }}
      coverage-scope: ${{ inputs.coverage-scope }}

  Sonar:
    permissions:
      contents: read
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
    uses: ./.github/workflows/sonarqube.yml
    secrets:
      github: ${{ secrets.GITHUB_TOKEN }}
      sonar: ${{ secrets.SONAR_TOKEN }}
    with:
      configuration: ${{ inputs.sonar-configuration }}
      coverage-command: ${{ inputs.coverage-command }}
      coverage-output-file: ${{ inputs.coverage-output-file }}
      coverage-scope: ${{ inputs.coverage-scope }}
